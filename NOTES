% switchgcc.sh (set to gcc8 because nvcc can't handle 9 or 10)
% module load nvidia/20.7
Need --disable-shared when building with nvidia--CUDA fails with shared, maybe CPU as well?
Need --disable-openmp only because using nvcc as linker cannot find CPU OpenMP libs.
% env CC=nvc FC=nvfortran ./configure --prefix=/home/rosinski/install/gptl_cuda --disable-shared --disable-openmp --with-nvcc=nvcc --enable-cacc --enable-facc 2>&1 | tee out.configure

To disable GPU consistency checks (default enabled):
% env CC=nvc FC=nvfortran ./configure --prefix=/home/rosinski/install/gptl_cuda --disable-shared --disable-openmp --with-nvcc=nvcc --enable-cacc --enable-facc --disable-gpuchecks 2>&1 | tee out.configure

To enable GPU recursion (adds significant overhead so default disabled):
% env CC=nvc FC=nvfortran ./configure --prefix=/home/rosinski/install/gptl_cuda --disable-shared --disable-openmp --with-nvcc=nvcc --enable-cacc --enable-facc --enable-gpurecursion 2>&1 | tee out.configure

NOTE max efficiency obtained with --disable-gpuchecks --disable-gpurecursion

% make clean; make -j8
% make check

Current status: Both tests in cuda/tests succeed
Test W/O nvidia module loaded:
  % env CC=mpicc FC=mpif90 ./configure --enable-pmpi
  % make clean; make -j8; make check
  Succeeds
  